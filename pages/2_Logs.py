# pages/2_Logs.py
import streamlit as st

st.set_page_config(page_title="Chi ti·∫øt Logs", page_icon="üìù", layout="wide")

st.markdown("# üìù Chi ti·∫øt Logs")
st.write(
    """
    Trang n√†y hi·ªÉn th·ªã chi ti·∫øt c√°c b∆∞·ªõc x·ª≠ l√Ω c·ªßa RAG pipeline cho l∆∞·ª£t truy v·∫•n cu·ªëi c√πng.
    """
)

if "logs" not in st.session_state or not st.session_state.logs:
    st.info("Ch∆∞a c√≥ log n√†o ƒë∆∞·ª£c ghi l·∫°i. H√£y b·∫Øt ƒë·∫ßu m·ªôt cu·ªôc tr√≤ chuy·ªán trong trang Chatbot.")
else:
    logs = st.session_state.logs
    
    st.write(f"**C√¢u h·ªèi:** `{logs.get('query')}`")
    
    classification = logs.get('classification', 'N/A')
    st.write(f"**Ph√¢n lo·∫°i c√¢u h·ªèi:** `{classification}`")

    if not logs.get('rag_enabled', False):
        st.success("ƒê√¢y l√† m·ªôt cu·ªôc h·ªôi tho·∫°i th√¥ng th∆∞·ªùng, kh√¥ng s·ª≠ d·ª•ng RAG pipeline.")
        st.write("**Ph·∫£n h·ªìi c·ªßa Bot:**")
        st.info(logs.get('response', 'N/A'))
    else:
        st.success("C√¢u h·ªèi ƒë∆∞·ª£c x√°c ƒë·ªãnh li√™n quan ƒë·∫øn PROPTIT, RAG pipeline ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t.")
        
        # Hi·ªÉn th·ªã c√°c b∆∞·ªõc c·ªßa RAG
        with st.expander("1. Vector Search - L·∫•y t√†i li·ªáu ·ª©ng vi√™n", expanded=True):
            vector_logs = logs.get('vector_search', {})
            st.metric("S·ªë t√†i li·ªáu t·ª´ Vector Search", vector_logs.get('retrieved_count', 0))
            retrieved_ids = vector_logs.get('retrieved_ids', [])
            st.write("**C√°c ID t√†i li·ªáu ƒë∆∞·ª£c t√¨m th·∫•y:**")
            st.json({"retrieved_ids": retrieved_ids})

        with st.expander("2. LLM Reranker - S·∫Øp x·∫øp l·∫°i v√† ch·ªçn l·ªçc", expanded=True):
            rerank_logs = logs.get('rerank', {})
            reranked_ids = rerank_logs.get('reranked_ids', [])
            st.metric("S·ªë t√†i li·ªáu ƒë∆∞·ª£c ch·ªçn sau khi Rerank", len(reranked_ids))
            st.write("**C√°c ID t√†i li·ªáu ƒë∆∞·ª£c ch·ªçn (theo th·ª© t·ª± ∆∞u ti√™n):**")
            st.json({"reranked_ids": reranked_ids})

        with st.expander("3. Generation - T·∫°o c√¢u tr·∫£ l·ªùi", expanded=True):
            st.write("**Ng·ªØ c·∫£nh (Context) cu·ªëi c√πng ƒë∆∞·ª£c g·ª≠i ƒë·∫øn LLM:**")
            st.text_area("Context", value=logs.get('final_context', 'N/A'), height=300, disabled=True)
            
            st.write("**Ph·∫£n h·ªìi cu·ªëi c√πng c·ªßa Bot:**")
            st.info(logs.get('response', 'N/A'))
